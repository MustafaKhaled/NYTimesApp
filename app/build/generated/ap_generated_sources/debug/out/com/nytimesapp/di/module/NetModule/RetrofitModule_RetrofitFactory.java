// Generated by Dagger (https://google.github.io/dagger).
package com.nytimesapp.di.module.NetModule;

import com.google.gson.Gson;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public final class RetrofitModule_RetrofitFactory implements Factory<Retrofit> {
  private final RetrofitModule module;

  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<Gson> gsonProvider;

  private final Provider<GsonConverterFactory> gsonConverterFactoryProvider;

  public RetrofitModule_RetrofitFactory(
      RetrofitModule module,
      Provider<OkHttpClient> okHttpClientProvider,
      Provider<Gson> gsonProvider,
      Provider<GsonConverterFactory> gsonConverterFactoryProvider) {
    this.module = module;
    this.okHttpClientProvider = okHttpClientProvider;
    this.gsonProvider = gsonProvider;
    this.gsonConverterFactoryProvider = gsonConverterFactoryProvider;
  }

  @Override
  public Retrofit get() {
    return proxyRetrofit(
        module, okHttpClientProvider.get(), gsonProvider.get(), gsonConverterFactoryProvider.get());
  }

  public static RetrofitModule_RetrofitFactory create(
      RetrofitModule module,
      Provider<OkHttpClient> okHttpClientProvider,
      Provider<Gson> gsonProvider,
      Provider<GsonConverterFactory> gsonConverterFactoryProvider) {
    return new RetrofitModule_RetrofitFactory(
        module, okHttpClientProvider, gsonProvider, gsonConverterFactoryProvider);
  }

  public static Retrofit proxyRetrofit(
      RetrofitModule instance,
      OkHttpClient okHttpClient,
      Gson gson,
      GsonConverterFactory gsonConverterFactory) {
    return Preconditions.checkNotNull(
        instance.retrofit(okHttpClient, gson, gsonConverterFactory),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
