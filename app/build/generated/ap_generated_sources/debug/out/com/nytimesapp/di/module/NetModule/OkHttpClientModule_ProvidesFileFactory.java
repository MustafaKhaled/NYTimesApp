// Generated by Dagger (https://google.github.io/dagger).
package com.nytimesapp.di.module.NetModule;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.io.File;
import javax.inject.Provider;

public final class OkHttpClientModule_ProvidesFileFactory implements Factory<File> {
  private final OkHttpClientModule module;

  private final Provider<Context> contextProvider;

  public OkHttpClientModule_ProvidesFileFactory(
      OkHttpClientModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public File get() {
    return proxyProvidesFile(module, contextProvider.get());
  }

  public static OkHttpClientModule_ProvidesFileFactory create(
      OkHttpClientModule module, Provider<Context> contextProvider) {
    return new OkHttpClientModule_ProvidesFileFactory(module, contextProvider);
  }

  public static File proxyProvidesFile(OkHttpClientModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.providesFile(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
