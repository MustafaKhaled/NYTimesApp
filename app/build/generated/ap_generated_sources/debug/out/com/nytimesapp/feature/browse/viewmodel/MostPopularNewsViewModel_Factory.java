// Generated by Dagger (https://google.github.io/dagger).
package com.nytimesapp.feature.browse.viewmodel;

import com.nytimesapp.feature.browse.data.repo.MostPopularNewsRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MostPopularNewsViewModel_Factory implements Factory<MostPopularNewsViewModel> {
  private final Provider<MostPopularNewsRepository> repositoryProvider;

  public MostPopularNewsViewModel_Factory(Provider<MostPopularNewsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MostPopularNewsViewModel get() {
    return new MostPopularNewsViewModel(repositoryProvider.get());
  }

  public static MostPopularNewsViewModel_Factory create(
      Provider<MostPopularNewsRepository> repositoryProvider) {
    return new MostPopularNewsViewModel_Factory(repositoryProvider);
  }

  public static MostPopularNewsViewModel newMostPopularNewsViewModel(
      MostPopularNewsRepository repository) {
    return new MostPopularNewsViewModel(repository);
  }
}
