// Generated by Dagger (https://google.github.io/dagger).
package com.nytimesapp.feature.browse.data.repo;

import com.nytimesapp.feature.browse.data.remote.MostPopularNewsApiService;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MostPopularNewsRepository_Factory implements Factory<MostPopularNewsRepository> {
  private final Provider<MostPopularNewsApiService> apiServiceProvider;

  public MostPopularNewsRepository_Factory(Provider<MostPopularNewsApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public MostPopularNewsRepository get() {
    return new MostPopularNewsRepository(apiServiceProvider.get());
  }

  public static MostPopularNewsRepository_Factory create(
      Provider<MostPopularNewsApiService> apiServiceProvider) {
    return new MostPopularNewsRepository_Factory(apiServiceProvider);
  }

  public static MostPopularNewsRepository newMostPopularNewsRepository(
      MostPopularNewsApiService apiService) {
    return new MostPopularNewsRepository(apiService);
  }
}
