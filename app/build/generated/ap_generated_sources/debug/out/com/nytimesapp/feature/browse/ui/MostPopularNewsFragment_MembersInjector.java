// Generated by Dagger (https://google.github.io/dagger).
package com.nytimesapp.feature.browse.ui;

import com.nytimesapp.di.module.multibinding.DaggerViewModelFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MostPopularNewsFragment_MembersInjector
    implements MembersInjector<MostPopularNewsFragment> {
  private final Provider<DaggerViewModelFactory> factoryProvider;

  public MostPopularNewsFragment_MembersInjector(Provider<DaggerViewModelFactory> factoryProvider) {
    this.factoryProvider = factoryProvider;
  }

  public static MembersInjector<MostPopularNewsFragment> create(
      Provider<DaggerViewModelFactory> factoryProvider) {
    return new MostPopularNewsFragment_MembersInjector(factoryProvider);
  }

  @Override
  public void injectMembers(MostPopularNewsFragment instance) {
    injectFactory(instance, factoryProvider.get());
  }

  public static void injectFactory(
      MostPopularNewsFragment instance, DaggerViewModelFactory factory) {
    instance.factory = factory;
  }
}
